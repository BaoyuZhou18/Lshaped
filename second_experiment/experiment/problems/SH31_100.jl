using Random

struct SPResult
    x̄::Vector{Float64}
    ȳ::Dict{Int, Vector{Float64}}
    VRP::Float64
    EWS::Float64
    EVPI::Float64
    VSS::Float64
    EV::Float64
    EEV::Float64
end

# For LShaped solver
problems = Vector{Tuple{StochasticModel,Vector{<:AbstractScenario},SPResult,String}}()

Random.seed!(1)

@stochastic_model SH31_100 begin
    @stage 1 begin
        @parameters begin
            lb = zeros(Float64,10)
            c  = [0.73, -2.16, -0.31, 9.00, -5.33, 4.30, 5.80, 6.17, -0.09, 2.65]
            A  = [ 0.00 -4.19  0.00  0.00  0.00  4.12  0.00  0.00 -3.53  0.00;
                  -0.34 -1.88  0.00  0.00  0.00  0.00 -1.32  0.00  0.00 -4.54;
                   0.00  3.04  8.34  3.41 -7.90  0.00  0.00  6.45  0.00  9.80;
                   0.00  0.00 -9.97  0.00  0.00  0.00  5.26  0.00  0.00 -0.89;
                   0.00 -0.92  0.00  6.57  0.00  0.00  2.05  0.00  2.17 -2.31]
            b  = [-1.24; -2.79; 8.00; -1.94; 2.61]
        end
        @decision(SH31_100, x[i in 1:10] >= lb[i])
        @objective(SH31_100, Min, dot(c, x))
        @constraint(SH31_100, A * x .== b)
    end
    @stage 2 begin
        @parameters begin
            lb = zeros(Float64,15)

            T  = [-8.42  0.00  0.00  0.00  0.00  0.00  6.91  0.00 -2.07  0.00;
                  -5.23  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00;
                  -2.14  0.00  0.00  0.00  1.16  0.00  0.00  0.00  0.00  0.00;
                   1.19  0.00  0.00  0.00  0.00  0.00  0.00 -6.05  0.00 -4.82;
                   0.00  0.00  5.48  0.00  0.00  0.00  0.00 -4.75  0.00  0.00;
                   2.38  0.00  2.90  0.00  0.00 -0.88  0.00  0.00  0.00  0.00;
                   0.00  0.00  0.00  0.00  0.00  0.00  0.00  1.04  0.00  0.00;
                   2.61  0.00  0.00 -0.91  0.00  0.00  0.00  0.00 -4.93  0.00;
                  -5.79  0.00  0.00  0.00  0.00  0.00  0.00  0.00  9.60  0.00;
                  -2.64  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00]
            W  = [ 0.00  0.00  0.00  0.00  0.00 -2.30  0.00  0.00  0.18 -6.37   8.49  0.00   0.00  0.00  0.00;
                   0.00  0.00  0.00  4.36  0.00  0.00  5.13  0.00  0.00  0.00   8.96  0.00 -18.45  0.00  0.00;
                   0.00  9.17  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00   3.45 -6.02   0.00  0.00 -6.60;
                  -0.07  5.48  0.00  0.00 -1.60  5.38  0.00 -2.74 -5.49 -3.05   0.00  0.29   0.00  1.80  0.00;
                   0.00  0.00  0.00  0.00  0.00  2.96  2.15  0.00 -7.52  0.00   2.41  0.00   0.00  0.00  0.00;
                   0.00  0.00  7.93  9.69  0.00  0.00  1.65  0.00 -8.92  0.00 -10.36  0.00   0.00  0.00  0.00;
                   0.00  0.00 -7.41  0.00  0.00  0.00  0.00  0.00  0.00  0.00   0.00  7.41   0.00  0.00  0.00;
                   0.00 -7.35  0.00  5.35  0.00  0.00  0.00  0.00  0.00  0.00   2.69 -0.69   0.00  0.00  0.00;
                   0.00  0.00  0.00  0.00  0.00  0.00 -5.73 -2.58  0.00  0.00   0.00  5.27   3.05  0.00  0.00;
                   0.00  0.00  0.00  0.00  7.43  3.74  2.09  0.00  8.96 -5.88   0.00  0.00 -16.33  0.00  0.00]
            q  = [0.00, 0.00, 4.80, 5.99, 9.46, 7.01, 0.00, 6.46, 2.88, 0.00, 0.00, 4.95, 0.00, 0.00, 1.29] 
        end
        @uncertain ξ[1:31]
        h = [ξ[1]; ξ[2]; ξ[3]; ξ[4]; ξ[5]; ξ[6]; ξ[7]; ξ[8]; ξ[9]; ξ[10]]
        T_random = [ξ[11]  0.00  0.00   0.00   0.00   0.00   ξ[12]  0.00   ξ[13]  0.00;
                    ξ[14]  0.00  0.00   0.00   0.00   0.00   0.00   0.00   0.00   0.00;
                    ξ[15]  0.00  0.00   0.00   ξ[16]  0.00   0.00   0.00   0.00   0.00;
                    ξ[17]  0.00  0.00   0.00   0.00   0.00   0.00   ξ[18]  0.00   ξ[19];
                    0.00   0.00  ξ[20]  0.00   0.00   0.00   0.00   ξ[21]  0.00   0.00;
                    ξ[22]  0.00  ξ[23]  0.00   0.00   ξ[24]  0.00   0.00   0.00   0.00;
                    0.00   0.00  0.00   0.00   0.00   0.00   0.00   ξ[25]  0.00   0.00;
                    ξ[26]  0.00  0.00   ξ[27]  0.00   0.00   0.00   0.00   ξ[28]  0.00;
                    ξ[29]  0.00  0.00   0.00   0.00   0.00   0.00   0.00   ξ[30]  0.00;
                    ξ[31]  0.00  0.00   0.00   0.00   0.00   0.00   0.00   0.00   0.00]
        @recourse(SH31_100, y[i in 1:15] >= lb[i])
        @objective(SH31_100, Min, dot(q, y))
        @constraint(SH31_100, (T + T_random) * x + W * y .== h)
    end
end

μ = [-3.88, 1.12, -4.63, 5.04, 2.05, 5.19, -5.53, 3.80, 1.81, -9.29]
σ = 10 * [sqrt(0.15), sqrt(0.01), sqrt(0.21), sqrt(0.25), sqrt(0.04), sqrt(0.27), sqrt(0.31), sqrt(0.14), sqrt(0.03), sqrt(0.86)]
σ_T = 0.1 * [8.42, 6.91, 2.07, 5.23, 2.14, 1.16, 1.19, 6.05, 4.82, 5.48, 4.75, 2.38, 2.90, 0.88, 1.04, 2.61, 0.91, 4.93, 5.79, 9.60, 2.64]
N = 10000
prob = 1/N

randn_vector = randn(31)
random_row_vector = zeros(Float64,31)
for j=1:10
    random_row_vector[j] = μ[j] + σ[j] * randn_vector[j]
end
for j=1:21
    random_row_vector[j+10] = σ_T[j] * randn_vector[j+10]
end
ξ11 = @scenario ξ[1:31] = random_row_vector probability = prob
scenarios_ss = [ξ11];

for i=2:N
    randn_vector = randn(31)
    random_row_vector = zeros(Float64,31)
    for j=1:10
        random_row_vector[j] = μ[j] + σ[j] * randn_vector[j]
    end
    for j=1:21
        random_row_vector[j+10] = σ_T[j] * randn_vector[j+10]
    end
    ξ11 = @scenario ξ[1:31] = random_row_vector probability = prob
    push!(scenarios_ss, ξ11)
end

# For LShaped solver
# Note: the "vec_simple_res" is meaningless for this problem
vec_simple_res = SPResult([46.67, 36.25], Dict(1 => [300., 100.], 2 => [300., 100.]), -855.83, -1518.75, 662.92, 286.92, -1445.92, -568.92)
push!(problems, (SH31_100, scenarios_ss, vec_simple_res, "SH31_100"))
